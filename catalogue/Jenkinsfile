pipeline {
   agent {
    node {
        label 'agent1'
    }
    }
    options {
        timeout(time: 1, unit: 'HOURS') 
        disableConcurrentBuilds()
    }
    environment {
        packageVersion = ''
        nexusUrl= "http://44.203.173.186:8081"

        }
    
    // parameters {
    //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

    //     text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

    //     booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')

    //     choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')

    //     password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    
    stages {
        stage('getting version') {
            steps {
                script // we are script because this is ruby scripting
                {
                    def packageJson = readJSON file: 'catalogue/package.json'
                    packageVersion = packageJson.version
                    echo "package  version :  $packageVersion "
                }
            }
        }
        stage('dependencies') {
            steps {
                sh """
                cd catalogue
                npm install
                """
            }
        }
         stage('build') {
            steps {
                sh """
                cd catalogue
                zip -q -r catalogue.zip ./* -x ".git" -x "*.zip"

                """
            }
        }
        stage('artifact') {
            steps {
            nexusArtifactUploader (
            nexusVersion:'nexus3',
            protocol:'http',
            nexusUrl: "${nexusUrl}",
            groupId:'com.roboshop',
            version: "${packageVersion}" ,
            repository:'catalogue',
            credentialsId:'nexus-auth',
            artifact [
                [
                artifactId:'catalogue',
                type:'zip',
                classifier:'',
                file: 'catalogue.zip'
              ]
            
          ]
                
          )
        
          }
        }
    }

    stage('Deploy') {
            steps {
                echo  'Deploying'
            }
        }
        
    }
     post { 
        always { 
            echo 'I will always say Hello again!'
             echo 'I will always say Hello again!'
        }
     }
        
    
